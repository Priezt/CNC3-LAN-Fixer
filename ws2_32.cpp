


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 头文件
#include <Windows.h>
#include <stdio.h>
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
#pragma comment(linker, "/EXPORT:accept=_AheadLib_accept,@1")
#pragma comment(linker, "/EXPORT:bind=_AheadLib_bind,@2")
#pragma comment(linker, "/EXPORT:closesocket=_AheadLib_closesocket,@3")
#pragma comment(linker, "/EXPORT:connect=_AheadLib_connect,@4")
#pragma comment(linker, "/EXPORT:getpeername=_AheadLib_getpeername,@5")
#pragma comment(linker, "/EXPORT:getsockname=_AheadLib_getsockname,@6")
#pragma comment(linker, "/EXPORT:getsockopt=_AheadLib_getsockopt,@7")
#pragma comment(linker, "/EXPORT:htonl=_AheadLib_htonl,@8")
#pragma comment(linker, "/EXPORT:htons=_AheadLib_htons,@9")
#pragma comment(linker, "/EXPORT:ioctlsocket=_AheadLib_ioctlsocket,@10")
#pragma comment(linker, "/EXPORT:inet_addr=_AheadLib_inet_addr,@11")
#pragma comment(linker, "/EXPORT:inet_ntoa=_AheadLib_inet_ntoa,@12")
#pragma comment(linker, "/EXPORT:listen=_AheadLib_listen,@13")
#pragma comment(linker, "/EXPORT:ntohl=_AheadLib_ntohl,@14")
#pragma comment(linker, "/EXPORT:ntohs=_AheadLib_ntohs,@15")
#pragma comment(linker, "/EXPORT:recv=_AheadLib_recv,@16")
#pragma comment(linker, "/EXPORT:recvfrom=_AheadLib_recvfrom,@17")
#pragma comment(linker, "/EXPORT:select=_AheadLib_select,@18")
#pragma comment(linker, "/EXPORT:send=_AheadLib_send,@19")
#pragma comment(linker, "/EXPORT:sendto=_AheadLib_sendto,@20")
#pragma comment(linker, "/EXPORT:setsockopt=_AheadLib_setsockopt,@21")
#pragma comment(linker, "/EXPORT:shutdown=_AheadLib_shutdown,@22")
#pragma comment(linker, "/EXPORT:socket=_AheadLib_socket,@23")
#pragma comment(linker, "/EXPORT:GetAddrInfoW=_AheadLib_GetAddrInfoW,@24")
#pragma comment(linker, "/EXPORT:GetNameInfoW=_AheadLib_GetNameInfoW,@25")
#pragma comment(linker, "/EXPORT:WSApSetPostRoutine=_AheadLib_WSApSetPostRoutine,@26")
#pragma comment(linker, "/EXPORT:FreeAddrInfoW=_AheadLib_FreeAddrInfoW,@27")
#pragma comment(linker, "/EXPORT:WPUCompleteOverlappedRequest=_AheadLib_WPUCompleteOverlappedRequest,@28")
#pragma comment(linker, "/EXPORT:WSAAccept=_AheadLib_WSAAccept,@29")
#pragma comment(linker, "/EXPORT:WSAAddressToStringA=_AheadLib_WSAAddressToStringA,@30")
#pragma comment(linker, "/EXPORT:WSAAddressToStringW=_AheadLib_WSAAddressToStringW,@31")
#pragma comment(linker, "/EXPORT:WSACloseEvent=_AheadLib_WSACloseEvent,@32")
#pragma comment(linker, "/EXPORT:WSAConnect=_AheadLib_WSAConnect,@33")
#pragma comment(linker, "/EXPORT:WSACreateEvent=_AheadLib_WSACreateEvent,@34")
#pragma comment(linker, "/EXPORT:WSADuplicateSocketA=_AheadLib_WSADuplicateSocketA,@35")
#pragma comment(linker, "/EXPORT:WSADuplicateSocketW=_AheadLib_WSADuplicateSocketW,@36")
#pragma comment(linker, "/EXPORT:WSAEnumNameSpaceProvidersA=_AheadLib_WSAEnumNameSpaceProvidersA,@37")
#pragma comment(linker, "/EXPORT:WSAEnumNameSpaceProvidersW=_AheadLib_WSAEnumNameSpaceProvidersW,@38")
#pragma comment(linker, "/EXPORT:WSAEnumNetworkEvents=_AheadLib_WSAEnumNetworkEvents,@39")
#pragma comment(linker, "/EXPORT:WSAEnumProtocolsA=_AheadLib_WSAEnumProtocolsA,@40")
#pragma comment(linker, "/EXPORT:WSAEnumProtocolsW=_AheadLib_WSAEnumProtocolsW,@41")
#pragma comment(linker, "/EXPORT:WSAEventSelect=_AheadLib_WSAEventSelect,@42")
#pragma comment(linker, "/EXPORT:WSAGetOverlappedResult=_AheadLib_WSAGetOverlappedResult,@43")
#pragma comment(linker, "/EXPORT:WSAGetQOSByName=_AheadLib_WSAGetQOSByName,@44")
#pragma comment(linker, "/EXPORT:WSAGetServiceClassInfoA=_AheadLib_WSAGetServiceClassInfoA,@45")
#pragma comment(linker, "/EXPORT:WSAGetServiceClassInfoW=_AheadLib_WSAGetServiceClassInfoW,@46")
#pragma comment(linker, "/EXPORT:WSAGetServiceClassNameByClassIdA=_AheadLib_WSAGetServiceClassNameByClassIdA,@47")
#pragma comment(linker, "/EXPORT:WSAGetServiceClassNameByClassIdW=_AheadLib_WSAGetServiceClassNameByClassIdW,@48")
#pragma comment(linker, "/EXPORT:WSAHtonl=_AheadLib_WSAHtonl,@49")
#pragma comment(linker, "/EXPORT:WSAHtons=_AheadLib_WSAHtons,@50")
#pragma comment(linker, "/EXPORT:gethostbyaddr=_AheadLib_gethostbyaddr,@51")
#pragma comment(linker, "/EXPORT:gethostbyname=_AheadLib_gethostbyname@4")
#pragma comment(linker, "/EXPORT:getprotobyname=_AheadLib_getprotobyname,@53")
#pragma comment(linker, "/EXPORT:getprotobynumber=_AheadLib_getprotobynumber,@54")
#pragma comment(linker, "/EXPORT:getservbyname=_AheadLib_getservbyname,@55")
#pragma comment(linker, "/EXPORT:getservbyport=_AheadLib_getservbyport,@56")
#pragma comment(linker, "/EXPORT:gethostname=_AheadLib_gethostname,@57")
#pragma comment(linker, "/EXPORT:WSAInstallServiceClassA=_AheadLib_WSAInstallServiceClassA,@58")
#pragma comment(linker, "/EXPORT:WSAInstallServiceClassW=_AheadLib_WSAInstallServiceClassW,@59")
#pragma comment(linker, "/EXPORT:WSAIoctl=_AheadLib_WSAIoctl,@60")
#pragma comment(linker, "/EXPORT:WSAJoinLeaf=_AheadLib_WSAJoinLeaf,@61")
#pragma comment(linker, "/EXPORT:WSALookupServiceBeginA=_AheadLib_WSALookupServiceBeginA,@62")
#pragma comment(linker, "/EXPORT:WSALookupServiceBeginW=_AheadLib_WSALookupServiceBeginW,@63")
#pragma comment(linker, "/EXPORT:WSALookupServiceEnd=_AheadLib_WSALookupServiceEnd,@64")
#pragma comment(linker, "/EXPORT:WSALookupServiceNextA=_AheadLib_WSALookupServiceNextA,@65")
#pragma comment(linker, "/EXPORT:WSALookupServiceNextW=_AheadLib_WSALookupServiceNextW,@66")
#pragma comment(linker, "/EXPORT:WSANSPIoctl=_AheadLib_WSANSPIoctl,@67")
#pragma comment(linker, "/EXPORT:WSANtohl=_AheadLib_WSANtohl,@68")
#pragma comment(linker, "/EXPORT:WSANtohs=_AheadLib_WSANtohs,@69")
#pragma comment(linker, "/EXPORT:WSAProviderConfigChange=_AheadLib_WSAProviderConfigChange,@70")
#pragma comment(linker, "/EXPORT:WSARecv=_AheadLib_WSARecv,@71")
#pragma comment(linker, "/EXPORT:WSARecvDisconnect=_AheadLib_WSARecvDisconnect,@72")
#pragma comment(linker, "/EXPORT:WSARecvFrom=_AheadLib_WSARecvFrom,@73")
#pragma comment(linker, "/EXPORT:WSARemoveServiceClass=_AheadLib_WSARemoveServiceClass,@74")
#pragma comment(linker, "/EXPORT:WSAResetEvent=_AheadLib_WSAResetEvent,@75")
#pragma comment(linker, "/EXPORT:WSASend=_AheadLib_WSASend,@76")
#pragma comment(linker, "/EXPORT:WSASendDisconnect=_AheadLib_WSASendDisconnect,@77")
#pragma comment(linker, "/EXPORT:WSASendTo=_AheadLib_WSASendTo,@78")
#pragma comment(linker, "/EXPORT:WSASetEvent=_AheadLib_WSASetEvent,@79")
#pragma comment(linker, "/EXPORT:WSASetServiceA=_AheadLib_WSASetServiceA,@80")
#pragma comment(linker, "/EXPORT:WSASetServiceW=_AheadLib_WSASetServiceW,@81")
#pragma comment(linker, "/EXPORT:WSASocketA=_AheadLib_WSASocketA,@82")
#pragma comment(linker, "/EXPORT:WSASocketW=_AheadLib_WSASocketW,@83")
#pragma comment(linker, "/EXPORT:WSAStringToAddressA=_AheadLib_WSAStringToAddressA,@84")
#pragma comment(linker, "/EXPORT:WSAStringToAddressW=_AheadLib_WSAStringToAddressW,@85")
#pragma comment(linker, "/EXPORT:WSAWaitForMultipleEvents=_AheadLib_WSAWaitForMultipleEvents,@86")
#pragma comment(linker, "/EXPORT:WSCDeinstallProvider=_AheadLib_WSCDeinstallProvider,@87")
#pragma comment(linker, "/EXPORT:WSCEnableNSProvider=_AheadLib_WSCEnableNSProvider,@88")
#pragma comment(linker, "/EXPORT:WSCEnumProtocols=_AheadLib_WSCEnumProtocols,@89")
#pragma comment(linker, "/EXPORT:WSCGetProviderPath=_AheadLib_WSCGetProviderPath,@90")
#pragma comment(linker, "/EXPORT:WSCInstallNameSpace=_AheadLib_WSCInstallNameSpace,@91")
#pragma comment(linker, "/EXPORT:WSCInstallProvider=_AheadLib_WSCInstallProvider,@92")
#pragma comment(linker, "/EXPORT:WSCUnInstallNameSpace=_AheadLib_WSCUnInstallNameSpace,@93")
#pragma comment(linker, "/EXPORT:WSCUpdateProvider=_AheadLib_WSCUpdateProvider,@94")
#pragma comment(linker, "/EXPORT:WSCWriteNameSpaceOrder=_AheadLib_WSCWriteNameSpaceOrder,@95")
#pragma comment(linker, "/EXPORT:WSCWriteProviderOrder=_AheadLib_WSCWriteProviderOrder,@96")
#pragma comment(linker, "/EXPORT:freeaddrinfo=_AheadLib_freeaddrinfo,@97")
#pragma comment(linker, "/EXPORT:getaddrinfo=_AheadLib_getaddrinfo,@98")
#pragma comment(linker, "/EXPORT:getnameinfo=_AheadLib_getnameinfo,@99")
#pragma comment(linker, "/EXPORT:Noname100=_AheadLib_Noname100,@100,NONAME")
#pragma comment(linker, "/EXPORT:WSAAsyncSelect=_AheadLib_WSAAsyncSelect,@101")
#pragma comment(linker, "/EXPORT:WSAAsyncGetHostByAddr=_AheadLib_WSAAsyncGetHostByAddr,@102")
#pragma comment(linker, "/EXPORT:WSAAsyncGetHostByName=_AheadLib_WSAAsyncGetHostByName,@103")
#pragma comment(linker, "/EXPORT:WSAAsyncGetProtoByNumber=_AheadLib_WSAAsyncGetProtoByNumber,@104")
#pragma comment(linker, "/EXPORT:WSAAsyncGetProtoByName=_AheadLib_WSAAsyncGetProtoByName,@105")
#pragma comment(linker, "/EXPORT:WSAAsyncGetServByPort=_AheadLib_WSAAsyncGetServByPort,@106")
#pragma comment(linker, "/EXPORT:WSAAsyncGetServByName=_AheadLib_WSAAsyncGetServByName,@107")
#pragma comment(linker, "/EXPORT:WSACancelAsyncRequest=_AheadLib_WSACancelAsyncRequest,@108")
#pragma comment(linker, "/EXPORT:WSASetBlockingHook=_AheadLib_WSASetBlockingHook,@109")
#pragma comment(linker, "/EXPORT:WSAUnhookBlockingHook=_AheadLib_WSAUnhookBlockingHook,@110")
#pragma comment(linker, "/EXPORT:WSAGetLastError=_AheadLib_WSAGetLastError,@111")
#pragma comment(linker, "/EXPORT:WSASetLastError=_AheadLib_WSASetLastError,@112")
#pragma comment(linker, "/EXPORT:WSACancelBlockingCall=_AheadLib_WSACancelBlockingCall,@113")
#pragma comment(linker, "/EXPORT:WSAIsBlocking=_AheadLib_WSAIsBlocking,@114")
#pragma comment(linker, "/EXPORT:WSAStartup=_AheadLib_WSAStartup,@115")
#pragma comment(linker, "/EXPORT:WSACleanup=_AheadLib_WSACleanup,@116")
#pragma comment(linker, "/EXPORT:Noname117=_AheadLib_Noname117,@117,NONAME")
#pragma comment(linker, "/EXPORT:Noname118=_AheadLib_Noname118,@118,NONAME")
#pragma comment(linker, "/EXPORT:Noname119=_AheadLib_Noname119,@119,NONAME")
#pragma comment(linker, "/EXPORT:Noname120=_AheadLib_Noname120,@120,NONAME")
#pragma comment(linker, "/EXPORT:Noname121=_AheadLib_Noname121,@121,NONAME")
#pragma comment(linker, "/EXPORT:Noname122=_AheadLib_Noname122,@122,NONAME")
#pragma comment(linker, "/EXPORT:Noname123=_AheadLib_Noname123,@123,NONAME")
#pragma comment(linker, "/EXPORT:Noname124=_AheadLib_Noname124,@124,NONAME")
#pragma comment(linker, "/EXPORT:Noname125=_AheadLib_Noname125,@125,NONAME")
#pragma comment(linker, "/EXPORT:Noname126=_AheadLib_Noname126,@126,NONAME")
#pragma comment(linker, "/EXPORT:Noname127=_AheadLib_Noname127,@127,NONAME")
#pragma comment(linker, "/EXPORT:Noname128=_AheadLib_Noname128,@128,NONAME")
#pragma comment(linker, "/EXPORT:Noname129=_AheadLib_Noname129,@129,NONAME")
#pragma comment(linker, "/EXPORT:Noname130=_AheadLib_Noname130,@130,NONAME")
#pragma comment(linker, "/EXPORT:Noname131=_AheadLib_Noname131,@131,NONAME")
#pragma comment(linker, "/EXPORT:Noname132=_AheadLib_Noname132,@132,NONAME")
#pragma comment(linker, "/EXPORT:Noname133=_AheadLib_Noname133,@133,NONAME")
#pragma comment(linker, "/EXPORT:Noname134=_AheadLib_Noname134,@134,NONAME")
#pragma comment(linker, "/EXPORT:Noname135=_AheadLib_Noname135,@135,NONAME")
#pragma comment(linker, "/EXPORT:Noname136=_AheadLib_Noname136,@136,NONAME")
#pragma comment(linker, "/EXPORT:Noname137=_AheadLib_Noname137,@137,NONAME")
#pragma comment(linker, "/EXPORT:Noname138=_AheadLib_Noname138,@138,NONAME")
#pragma comment(linker, "/EXPORT:Noname139=_AheadLib_Noname139,@139,NONAME")
#pragma comment(linker, "/EXPORT:Noname140=_AheadLib_Noname140,@140,NONAME")
#pragma comment(linker, "/EXPORT:Noname141=_AheadLib_Noname141,@141,NONAME")
#pragma comment(linker, "/EXPORT:Noname142=_AheadLib_Noname142,@142,NONAME")
#pragma comment(linker, "/EXPORT:Noname143=_AheadLib_Noname143,@143,NONAME")
#pragma comment(linker, "/EXPORT:Noname144=_AheadLib_Noname144,@144,NONAME")
#pragma comment(linker, "/EXPORT:Noname145=_AheadLib_Noname145,@145,NONAME")
#pragma comment(linker, "/EXPORT:Noname146=_AheadLib_Noname146,@146,NONAME")
#pragma comment(linker, "/EXPORT:Noname147=_AheadLib_Noname147,@147,NONAME")
#pragma comment(linker, "/EXPORT:Noname148=_AheadLib_Noname148,@148,NONAME")
#pragma comment(linker, "/EXPORT:Noname149=_AheadLib_Noname149,@149,NONAME")
#pragma comment(linker, "/EXPORT:Noname150=_AheadLib_Noname150,@150,NONAME")
#pragma comment(linker, "/EXPORT:___WSAFDIsSet=_AheadLib___WSAFDIsSet,@151")
#pragma comment(linker, "/EXPORT:Noname152=_AheadLib_Noname152,@152,NONAME")
#pragma comment(linker, "/EXPORT:Noname153=_AheadLib_Noname153,@153,NONAME")
#pragma comment(linker, "/EXPORT:Noname154=_AheadLib_Noname154,@154,NONAME")
#pragma comment(linker, "/EXPORT:Noname155=_AheadLib_Noname155,@155,NONAME")
#pragma comment(linker, "/EXPORT:Noname156=_AheadLib_Noname156,@156,NONAME")
#pragma comment(linker, "/EXPORT:Noname157=_AheadLib_Noname157,@157,NONAME")
#pragma comment(linker, "/EXPORT:Noname158=_AheadLib_Noname158,@158,NONAME")
#pragma comment(linker, "/EXPORT:Noname159=_AheadLib_Noname159,@159,NONAME")
#pragma comment(linker, "/EXPORT:Noname160=_AheadLib_Noname160,@160,NONAME")
#pragma comment(linker, "/EXPORT:Noname161=_AheadLib_Noname161,@161,NONAME")
#pragma comment(linker, "/EXPORT:Noname162=_AheadLib_Noname162,@162,NONAME")
#pragma comment(linker, "/EXPORT:Noname163=_AheadLib_Noname163,@163,NONAME")
#pragma comment(linker, "/EXPORT:Noname164=_AheadLib_Noname164,@164,NONAME")
#pragma comment(linker, "/EXPORT:Noname165=_AheadLib_Noname165,@165,NONAME")
#pragma comment(linker, "/EXPORT:Noname166=_AheadLib_Noname166,@166,NONAME")
#pragma comment(linker, "/EXPORT:Noname167=_AheadLib_Noname167,@167,NONAME")
#pragma comment(linker, "/EXPORT:Noname168=_AheadLib_Noname168,@168,NONAME")
#pragma comment(linker, "/EXPORT:Noname169=_AheadLib_Noname169,@169,NONAME")
#pragma comment(linker, "/EXPORT:Noname170=_AheadLib_Noname170,@170,NONAME")
#pragma comment(linker, "/EXPORT:Noname171=_AheadLib_Noname171,@171,NONAME")
#pragma comment(linker, "/EXPORT:Noname172=_AheadLib_Noname172,@172,NONAME")
#pragma comment(linker, "/EXPORT:Noname173=_AheadLib_Noname173,@173,NONAME")
#pragma comment(linker, "/EXPORT:Noname174=_AheadLib_Noname174,@174,NONAME")
#pragma comment(linker, "/EXPORT:Noname175=_AheadLib_Noname175,@175,NONAME")
#pragma comment(linker, "/EXPORT:Noname176=_AheadLib_Noname176,@176,NONAME")
#pragma comment(linker, "/EXPORT:Noname177=_AheadLib_Noname177,@177,NONAME")
#pragma comment(linker, "/EXPORT:Noname178=_AheadLib_Noname178,@178,NONAME")
#pragma comment(linker, "/EXPORT:Noname179=_AheadLib_Noname179,@179,NONAME")
#pragma comment(linker, "/EXPORT:Noname180=_AheadLib_Noname180,@180,NONAME")
#pragma comment(linker, "/EXPORT:Noname181=_AheadLib_Noname181,@181,NONAME")
#pragma comment(linker, "/EXPORT:Noname182=_AheadLib_Noname182,@182,NONAME")
#pragma comment(linker, "/EXPORT:Noname183=_AheadLib_Noname183,@183,NONAME")
#pragma comment(linker, "/EXPORT:Noname184=_AheadLib_Noname184,@184,NONAME")
#pragma comment(linker, "/EXPORT:Noname185=_AheadLib_Noname185,@185,NONAME")
#pragma comment(linker, "/EXPORT:Noname186=_AheadLib_Noname186,@186,NONAME")
#pragma comment(linker, "/EXPORT:Noname187=_AheadLib_Noname187,@187,NONAME")
#pragma comment(linker, "/EXPORT:Noname188=_AheadLib_Noname188,@188,NONAME")
#pragma comment(linker, "/EXPORT:Noname189=_AheadLib_Noname189,@189,NONAME")
#pragma comment(linker, "/EXPORT:Noname190=_AheadLib_Noname190,@190,NONAME")
#pragma comment(linker, "/EXPORT:Noname191=_AheadLib_Noname191,@191,NONAME")
#pragma comment(linker, "/EXPORT:Noname192=_AheadLib_Noname192,@192,NONAME")
#pragma comment(linker, "/EXPORT:Noname193=_AheadLib_Noname193,@193,NONAME")
#pragma comment(linker, "/EXPORT:Noname194=_AheadLib_Noname194,@194,NONAME")
#pragma comment(linker, "/EXPORT:Noname195=_AheadLib_Noname195,@195,NONAME")
#pragma comment(linker, "/EXPORT:Noname196=_AheadLib_Noname196,@196,NONAME")
#pragma comment(linker, "/EXPORT:Noname197=_AheadLib_Noname197,@197,NONAME")
#pragma comment(linker, "/EXPORT:Noname198=_AheadLib_Noname198,@198,NONAME")
#pragma comment(linker, "/EXPORT:Noname199=_AheadLib_Noname199,@199,NONAME")
#pragma comment(linker, "/EXPORT:Noname200=_AheadLib_Noname200,@200,NONAME")
#pragma comment(linker, "/EXPORT:Noname201=_AheadLib_Noname201,@201,NONAME")
#pragma comment(linker, "/EXPORT:Noname202=_AheadLib_Noname202,@202,NONAME")
#pragma comment(linker, "/EXPORT:Noname203=_AheadLib_Noname203,@203,NONAME")
#pragma comment(linker, "/EXPORT:Noname204=_AheadLib_Noname204,@204,NONAME")
#pragma comment(linker, "/EXPORT:Noname205=_AheadLib_Noname205,@205,NONAME")
#pragma comment(linker, "/EXPORT:Noname206=_AheadLib_Noname206,@206,NONAME")
#pragma comment(linker, "/EXPORT:Noname207=_AheadLib_Noname207,@207,NONAME")
#pragma comment(linker, "/EXPORT:Noname208=_AheadLib_Noname208,@208,NONAME")
#pragma comment(linker, "/EXPORT:Noname209=_AheadLib_Noname209,@209,NONAME")
#pragma comment(linker, "/EXPORT:Noname210=_AheadLib_Noname210,@210,NONAME")
#pragma comment(linker, "/EXPORT:Noname211=_AheadLib_Noname211,@211,NONAME")
#pragma comment(linker, "/EXPORT:Noname212=_AheadLib_Noname212,@212,NONAME")
#pragma comment(linker, "/EXPORT:Noname213=_AheadLib_Noname213,@213,NONAME")
#pragma comment(linker, "/EXPORT:Noname214=_AheadLib_Noname214,@214,NONAME")
#pragma comment(linker, "/EXPORT:Noname215=_AheadLib_Noname215,@215,NONAME")
#pragma comment(linker, "/EXPORT:Noname216=_AheadLib_Noname216,@216,NONAME")
#pragma comment(linker, "/EXPORT:Noname217=_AheadLib_Noname217,@217,NONAME")
#pragma comment(linker, "/EXPORT:Noname218=_AheadLib_Noname218,@218,NONAME")
#pragma comment(linker, "/EXPORT:Noname219=_AheadLib_Noname219,@219,NONAME")
#pragma comment(linker, "/EXPORT:Noname220=_AheadLib_Noname220,@220,NONAME")
#pragma comment(linker, "/EXPORT:Noname221=_AheadLib_Noname221,@221,NONAME")
#pragma comment(linker, "/EXPORT:Noname222=_AheadLib_Noname222,@222,NONAME")
#pragma comment(linker, "/EXPORT:Noname223=_AheadLib_Noname223,@223,NONAME")
#pragma comment(linker, "/EXPORT:Noname224=_AheadLib_Noname224,@224,NONAME")
#pragma comment(linker, "/EXPORT:Noname225=_AheadLib_Noname225,@225,NONAME")
#pragma comment(linker, "/EXPORT:Noname226=_AheadLib_Noname226,@226,NONAME")
#pragma comment(linker, "/EXPORT:Noname227=_AheadLib_Noname227,@227,NONAME")
#pragma comment(linker, "/EXPORT:Noname228=_AheadLib_Noname228,@228,NONAME")
#pragma comment(linker, "/EXPORT:Noname229=_AheadLib_Noname229,@229,NONAME")
#pragma comment(linker, "/EXPORT:Noname230=_AheadLib_Noname230,@230,NONAME")
#pragma comment(linker, "/EXPORT:Noname231=_AheadLib_Noname231,@231,NONAME")
#pragma comment(linker, "/EXPORT:Noname232=_AheadLib_Noname232,@232,NONAME")
#pragma comment(linker, "/EXPORT:Noname233=_AheadLib_Noname233,@233,NONAME")
#pragma comment(linker, "/EXPORT:Noname234=_AheadLib_Noname234,@234,NONAME")
#pragma comment(linker, "/EXPORT:Noname235=_AheadLib_Noname235,@235,NONAME")
#pragma comment(linker, "/EXPORT:Noname236=_AheadLib_Noname236,@236,NONAME")
#pragma comment(linker, "/EXPORT:Noname237=_AheadLib_Noname237,@237,NONAME")
#pragma comment(linker, "/EXPORT:Noname238=_AheadLib_Noname238,@238,NONAME")
#pragma comment(linker, "/EXPORT:Noname239=_AheadLib_Noname239,@239,NONAME")
#pragma comment(linker, "/EXPORT:Noname240=_AheadLib_Noname240,@240,NONAME")
#pragma comment(linker, "/EXPORT:Noname241=_AheadLib_Noname241,@241,NONAME")
#pragma comment(linker, "/EXPORT:Noname242=_AheadLib_Noname242,@242,NONAME")
#pragma comment(linker, "/EXPORT:Noname243=_AheadLib_Noname243,@243,NONAME")
#pragma comment(linker, "/EXPORT:Noname244=_AheadLib_Noname244,@244,NONAME")
#pragma comment(linker, "/EXPORT:Noname245=_AheadLib_Noname245,@245,NONAME")
#pragma comment(linker, "/EXPORT:Noname246=_AheadLib_Noname246,@246,NONAME")
#pragma comment(linker, "/EXPORT:Noname247=_AheadLib_Noname247,@247,NONAME")
#pragma comment(linker, "/EXPORT:Noname248=_AheadLib_Noname248,@248,NONAME")
#pragma comment(linker, "/EXPORT:Noname249=_AheadLib_Noname249,@249,NONAME")
#pragma comment(linker, "/EXPORT:Noname250=_AheadLib_Noname250,@250,NONAME")
#pragma comment(linker, "/EXPORT:Noname251=_AheadLib_Noname251,@251,NONAME")
#pragma comment(linker, "/EXPORT:Noname252=_AheadLib_Noname252,@252,NONAME")
#pragma comment(linker, "/EXPORT:Noname253=_AheadLib_Noname253,@253,NONAME")
#pragma comment(linker, "/EXPORT:Noname254=_AheadLib_Noname254,@254,NONAME")
#pragma comment(linker, "/EXPORT:Noname255=_AheadLib_Noname255,@255,NONAME")
#pragma comment(linker, "/EXPORT:Noname256=_AheadLib_Noname256,@256,NONAME")
#pragma comment(linker, "/EXPORT:Noname257=_AheadLib_Noname257,@257,NONAME")
#pragma comment(linker, "/EXPORT:Noname258=_AheadLib_Noname258,@258,NONAME")
#pragma comment(linker, "/EXPORT:Noname259=_AheadLib_Noname259,@259,NONAME")
#pragma comment(linker, "/EXPORT:Noname260=_AheadLib_Noname260,@260,NONAME")
#pragma comment(linker, "/EXPORT:Noname261=_AheadLib_Noname261,@261,NONAME")
#pragma comment(linker, "/EXPORT:Noname262=_AheadLib_Noname262,@262,NONAME")
#pragma comment(linker, "/EXPORT:Noname263=_AheadLib_Noname263,@263,NONAME")
#pragma comment(linker, "/EXPORT:Noname264=_AheadLib_Noname264,@264,NONAME")
#pragma comment(linker, "/EXPORT:Noname265=_AheadLib_Noname265,@265,NONAME")
#pragma comment(linker, "/EXPORT:Noname266=_AheadLib_Noname266,@266,NONAME")
#pragma comment(linker, "/EXPORT:Noname267=_AheadLib_Noname267,@267,NONAME")
#pragma comment(linker, "/EXPORT:Noname268=_AheadLib_Noname268,@268,NONAME")
#pragma comment(linker, "/EXPORT:Noname269=_AheadLib_Noname269,@269,NONAME")
#pragma comment(linker, "/EXPORT:Noname270=_AheadLib_Noname270,@270,NONAME")
#pragma comment(linker, "/EXPORT:Noname271=_AheadLib_Noname271,@271,NONAME")
#pragma comment(linker, "/EXPORT:Noname272=_AheadLib_Noname272,@272,NONAME")
#pragma comment(linker, "/EXPORT:Noname273=_AheadLib_Noname273,@273,NONAME")
#pragma comment(linker, "/EXPORT:Noname274=_AheadLib_Noname274,@274,NONAME")
#pragma comment(linker, "/EXPORT:Noname275=_AheadLib_Noname275,@275,NONAME")
#pragma comment(linker, "/EXPORT:Noname276=_AheadLib_Noname276,@276,NONAME")
#pragma comment(linker, "/EXPORT:Noname277=_AheadLib_Noname277,@277,NONAME")
#pragma comment(linker, "/EXPORT:Noname278=_AheadLib_Noname278,@278,NONAME")
#pragma comment(linker, "/EXPORT:Noname279=_AheadLib_Noname279,@279,NONAME")
#pragma comment(linker, "/EXPORT:Noname280=_AheadLib_Noname280,@280,NONAME")
#pragma comment(linker, "/EXPORT:Noname281=_AheadLib_Noname281,@281,NONAME")
#pragma comment(linker, "/EXPORT:Noname282=_AheadLib_Noname282,@282,NONAME")
#pragma comment(linker, "/EXPORT:Noname283=_AheadLib_Noname283,@283,NONAME")
#pragma comment(linker, "/EXPORT:Noname284=_AheadLib_Noname284,@284,NONAME")
#pragma comment(linker, "/EXPORT:Noname285=_AheadLib_Noname285,@285,NONAME")
#pragma comment(linker, "/EXPORT:Noname286=_AheadLib_Noname286,@286,NONAME")
#pragma comment(linker, "/EXPORT:Noname287=_AheadLib_Noname287,@287,NONAME")
#pragma comment(linker, "/EXPORT:Noname288=_AheadLib_Noname288,@288,NONAME")
#pragma comment(linker, "/EXPORT:Noname289=_AheadLib_Noname289,@289,NONAME")
#pragma comment(linker, "/EXPORT:Noname290=_AheadLib_Noname290,@290,NONAME")
#pragma comment(linker, "/EXPORT:Noname291=_AheadLib_Noname291,@291,NONAME")
#pragma comment(linker, "/EXPORT:Noname292=_AheadLib_Noname292,@292,NONAME")
#pragma comment(linker, "/EXPORT:Noname293=_AheadLib_Noname293,@293,NONAME")
#pragma comment(linker, "/EXPORT:Noname294=_AheadLib_Noname294,@294,NONAME")
#pragma comment(linker, "/EXPORT:Noname295=_AheadLib_Noname295,@295,NONAME")
#pragma comment(linker, "/EXPORT:Noname296=_AheadLib_Noname296,@296,NONAME")
#pragma comment(linker, "/EXPORT:Noname297=_AheadLib_Noname297,@297,NONAME")
#pragma comment(linker, "/EXPORT:Noname298=_AheadLib_Noname298,@298,NONAME")
#pragma comment(linker, "/EXPORT:Noname299=_AheadLib_Noname299,@299,NONAME")
#pragma comment(linker, "/EXPORT:Noname300=_AheadLib_Noname300,@300,NONAME")
#pragma comment(linker, "/EXPORT:Noname301=_AheadLib_Noname301,@301,NONAME")
#pragma comment(linker, "/EXPORT:Noname302=_AheadLib_Noname302,@302,NONAME")
#pragma comment(linker, "/EXPORT:Noname303=_AheadLib_Noname303,@303,NONAME")
#pragma comment(linker, "/EXPORT:Noname304=_AheadLib_Noname304,@304,NONAME")
#pragma comment(linker, "/EXPORT:Noname305=_AheadLib_Noname305,@305,NONAME")
#pragma comment(linker, "/EXPORT:Noname306=_AheadLib_Noname306,@306,NONAME")
#pragma comment(linker, "/EXPORT:Noname307=_AheadLib_Noname307,@307,NONAME")
#pragma comment(linker, "/EXPORT:Noname308=_AheadLib_Noname308,@308,NONAME")
#pragma comment(linker, "/EXPORT:Noname309=_AheadLib_Noname309,@309,NONAME")
#pragma comment(linker, "/EXPORT:Noname310=_AheadLib_Noname310,@310,NONAME")
#pragma comment(linker, "/EXPORT:Noname311=_AheadLib_Noname311,@311,NONAME")
#pragma comment(linker, "/EXPORT:Noname312=_AheadLib_Noname312,@312,NONAME")
#pragma comment(linker, "/EXPORT:Noname313=_AheadLib_Noname313,@313,NONAME")
#pragma comment(linker, "/EXPORT:Noname314=_AheadLib_Noname314,@314,NONAME")
#pragma comment(linker, "/EXPORT:Noname315=_AheadLib_Noname315,@315,NONAME")
#pragma comment(linker, "/EXPORT:Noname316=_AheadLib_Noname316,@316,NONAME")
#pragma comment(linker, "/EXPORT:Noname317=_AheadLib_Noname317,@317,NONAME")
#pragma comment(linker, "/EXPORT:Noname318=_AheadLib_Noname318,@318,NONAME")
#pragma comment(linker, "/EXPORT:Noname319=_AheadLib_Noname319,@319,NONAME")
#pragma comment(linker, "/EXPORT:Noname320=_AheadLib_Noname320,@320,NONAME")
#pragma comment(linker, "/EXPORT:Noname321=_AheadLib_Noname321,@321,NONAME")
#pragma comment(linker, "/EXPORT:Noname322=_AheadLib_Noname322,@322,NONAME")
#pragma comment(linker, "/EXPORT:Noname323=_AheadLib_Noname323,@323,NONAME")
#pragma comment(linker, "/EXPORT:Noname324=_AheadLib_Noname324,@324,NONAME")
#pragma comment(linker, "/EXPORT:Noname325=_AheadLib_Noname325,@325,NONAME")
#pragma comment(linker, "/EXPORT:Noname326=_AheadLib_Noname326,@326,NONAME")
#pragma comment(linker, "/EXPORT:Noname327=_AheadLib_Noname327,@327,NONAME")
#pragma comment(linker, "/EXPORT:Noname328=_AheadLib_Noname328,@328,NONAME")
#pragma comment(linker, "/EXPORT:Noname329=_AheadLib_Noname329,@329,NONAME")
#pragma comment(linker, "/EXPORT:Noname330=_AheadLib_Noname330,@330,NONAME")
#pragma comment(linker, "/EXPORT:Noname331=_AheadLib_Noname331,@331,NONAME")
#pragma comment(linker, "/EXPORT:Noname332=_AheadLib_Noname332,@332,NONAME")
#pragma comment(linker, "/EXPORT:Noname333=_AheadLib_Noname333,@333,NONAME")
#pragma comment(linker, "/EXPORT:Noname334=_AheadLib_Noname334,@334,NONAME")
#pragma comment(linker, "/EXPORT:Noname335=_AheadLib_Noname335,@335,NONAME")
#pragma comment(linker, "/EXPORT:Noname336=_AheadLib_Noname336,@336,NONAME")
#pragma comment(linker, "/EXPORT:Noname337=_AheadLib_Noname337,@337,NONAME")
#pragma comment(linker, "/EXPORT:Noname338=_AheadLib_Noname338,@338,NONAME")
#pragma comment(linker, "/EXPORT:Noname339=_AheadLib_Noname339,@339,NONAME")
#pragma comment(linker, "/EXPORT:Noname340=_AheadLib_Noname340,@340,NONAME")
#pragma comment(linker, "/EXPORT:Noname341=_AheadLib_Noname341,@341,NONAME")
#pragma comment(linker, "/EXPORT:Noname342=_AheadLib_Noname342,@342,NONAME")
#pragma comment(linker, "/EXPORT:Noname343=_AheadLib_Noname343,@343,NONAME")
#pragma comment(linker, "/EXPORT:Noname344=_AheadLib_Noname344,@344,NONAME")
#pragma comment(linker, "/EXPORT:Noname345=_AheadLib_Noname345,@345,NONAME")
#pragma comment(linker, "/EXPORT:Noname346=_AheadLib_Noname346,@346,NONAME")
#pragma comment(linker, "/EXPORT:Noname347=_AheadLib_Noname347,@347,NONAME")
#pragma comment(linker, "/EXPORT:Noname348=_AheadLib_Noname348,@348,NONAME")
#pragma comment(linker, "/EXPORT:Noname349=_AheadLib_Noname349,@349,NONAME")
#pragma comment(linker, "/EXPORT:Noname350=_AheadLib_Noname350,@350,NONAME")
#pragma comment(linker, "/EXPORT:Noname351=_AheadLib_Noname351,@351,NONAME")
#pragma comment(linker, "/EXPORT:Noname352=_AheadLib_Noname352,@352,NONAME")
#pragma comment(linker, "/EXPORT:Noname353=_AheadLib_Noname353,@353,NONAME")
#pragma comment(linker, "/EXPORT:Noname354=_AheadLib_Noname354,@354,NONAME")
#pragma comment(linker, "/EXPORT:Noname355=_AheadLib_Noname355,@355,NONAME")
#pragma comment(linker, "/EXPORT:Noname356=_AheadLib_Noname356,@356,NONAME")
#pragma comment(linker, "/EXPORT:Noname357=_AheadLib_Noname357,@357,NONAME")
#pragma comment(linker, "/EXPORT:Noname358=_AheadLib_Noname358,@358,NONAME")
#pragma comment(linker, "/EXPORT:Noname359=_AheadLib_Noname359,@359,NONAME")
#pragma comment(linker, "/EXPORT:Noname360=_AheadLib_Noname360,@360,NONAME")
#pragma comment(linker, "/EXPORT:Noname361=_AheadLib_Noname361,@361,NONAME")
#pragma comment(linker, "/EXPORT:Noname362=_AheadLib_Noname362,@362,NONAME")
#pragma comment(linker, "/EXPORT:Noname363=_AheadLib_Noname363,@363,NONAME")
#pragma comment(linker, "/EXPORT:Noname364=_AheadLib_Noname364,@364,NONAME")
#pragma comment(linker, "/EXPORT:Noname365=_AheadLib_Noname365,@365,NONAME")
#pragma comment(linker, "/EXPORT:Noname366=_AheadLib_Noname366,@366,NONAME")
#pragma comment(linker, "/EXPORT:Noname367=_AheadLib_Noname367,@367,NONAME")
#pragma comment(linker, "/EXPORT:Noname368=_AheadLib_Noname368,@368,NONAME")
#pragma comment(linker, "/EXPORT:Noname369=_AheadLib_Noname369,@369,NONAME")
#pragma comment(linker, "/EXPORT:Noname370=_AheadLib_Noname370,@370,NONAME")
#pragma comment(linker, "/EXPORT:Noname371=_AheadLib_Noname371,@371,NONAME")
#pragma comment(linker, "/EXPORT:Noname372=_AheadLib_Noname372,@372,NONAME")
#pragma comment(linker, "/EXPORT:Noname373=_AheadLib_Noname373,@373,NONAME")
#pragma comment(linker, "/EXPORT:Noname374=_AheadLib_Noname374,@374,NONAME")
#pragma comment(linker, "/EXPORT:Noname375=_AheadLib_Noname375,@375,NONAME")
#pragma comment(linker, "/EXPORT:Noname376=_AheadLib_Noname376,@376,NONAME")
#pragma comment(linker, "/EXPORT:Noname377=_AheadLib_Noname377,@377,NONAME")
#pragma comment(linker, "/EXPORT:Noname378=_AheadLib_Noname378,@378,NONAME")
#pragma comment(linker, "/EXPORT:Noname379=_AheadLib_Noname379,@379,NONAME")
#pragma comment(linker, "/EXPORT:Noname380=_AheadLib_Noname380,@380,NONAME")
#pragma comment(linker, "/EXPORT:Noname381=_AheadLib_Noname381,@381,NONAME")
#pragma comment(linker, "/EXPORT:Noname382=_AheadLib_Noname382,@382,NONAME")
#pragma comment(linker, "/EXPORT:Noname383=_AheadLib_Noname383,@383,NONAME")
#pragma comment(linker, "/EXPORT:Noname384=_AheadLib_Noname384,@384,NONAME")
#pragma comment(linker, "/EXPORT:Noname385=_AheadLib_Noname385,@385,NONAME")
#pragma comment(linker, "/EXPORT:Noname386=_AheadLib_Noname386,@386,NONAME")
#pragma comment(linker, "/EXPORT:Noname387=_AheadLib_Noname387,@387,NONAME")
#pragma comment(linker, "/EXPORT:Noname388=_AheadLib_Noname388,@388,NONAME")
#pragma comment(linker, "/EXPORT:Noname389=_AheadLib_Noname389,@389,NONAME")
#pragma comment(linker, "/EXPORT:Noname390=_AheadLib_Noname390,@390,NONAME")
#pragma comment(linker, "/EXPORT:Noname391=_AheadLib_Noname391,@391,NONAME")
#pragma comment(linker, "/EXPORT:Noname392=_AheadLib_Noname392,@392,NONAME")
#pragma comment(linker, "/EXPORT:Noname393=_AheadLib_Noname393,@393,NONAME")
#pragma comment(linker, "/EXPORT:Noname394=_AheadLib_Noname394,@394,NONAME")
#pragma comment(linker, "/EXPORT:Noname395=_AheadLib_Noname395,@395,NONAME")
#pragma comment(linker, "/EXPORT:Noname396=_AheadLib_Noname396,@396,NONAME")
#pragma comment(linker, "/EXPORT:Noname397=_AheadLib_Noname397,@397,NONAME")
#pragma comment(linker, "/EXPORT:Noname398=_AheadLib_Noname398,@398,NONAME")
#pragma comment(linker, "/EXPORT:Noname399=_AheadLib_Noname399,@399,NONAME")
#pragma comment(linker, "/EXPORT:Noname400=_AheadLib_Noname400,@400,NONAME")
#pragma comment(linker, "/EXPORT:Noname401=_AheadLib_Noname401,@401,NONAME")
#pragma comment(linker, "/EXPORT:Noname402=_AheadLib_Noname402,@402,NONAME")
#pragma comment(linker, "/EXPORT:Noname403=_AheadLib_Noname403,@403,NONAME")
#pragma comment(linker, "/EXPORT:Noname404=_AheadLib_Noname404,@404,NONAME")
#pragma comment(linker, "/EXPORT:Noname405=_AheadLib_Noname405,@405,NONAME")
#pragma comment(linker, "/EXPORT:Noname406=_AheadLib_Noname406,@406,NONAME")
#pragma comment(linker, "/EXPORT:Noname407=_AheadLib_Noname407,@407,NONAME")
#pragma comment(linker, "/EXPORT:Noname408=_AheadLib_Noname408,@408,NONAME")
#pragma comment(linker, "/EXPORT:Noname409=_AheadLib_Noname409,@409,NONAME")
#pragma comment(linker, "/EXPORT:Noname410=_AheadLib_Noname410,@410,NONAME")
#pragma comment(linker, "/EXPORT:Noname411=_AheadLib_Noname411,@411,NONAME")
#pragma comment(linker, "/EXPORT:Noname412=_AheadLib_Noname412,@412,NONAME")
#pragma comment(linker, "/EXPORT:Noname413=_AheadLib_Noname413,@413,NONAME")
#pragma comment(linker, "/EXPORT:Noname414=_AheadLib_Noname414,@414,NONAME")
#pragma comment(linker, "/EXPORT:Noname415=_AheadLib_Noname415,@415,NONAME")
#pragma comment(linker, "/EXPORT:Noname416=_AheadLib_Noname416,@416,NONAME")
#pragma comment(linker, "/EXPORT:Noname417=_AheadLib_Noname417,@417,NONAME")
#pragma comment(linker, "/EXPORT:Noname418=_AheadLib_Noname418,@418,NONAME")
#pragma comment(linker, "/EXPORT:Noname419=_AheadLib_Noname419,@419,NONAME")
#pragma comment(linker, "/EXPORT:Noname420=_AheadLib_Noname420,@420,NONAME")
#pragma comment(linker, "/EXPORT:Noname421=_AheadLib_Noname421,@421,NONAME")
#pragma comment(linker, "/EXPORT:Noname422=_AheadLib_Noname422,@422,NONAME")
#pragma comment(linker, "/EXPORT:Noname423=_AheadLib_Noname423,@423,NONAME")
#pragma comment(linker, "/EXPORT:Noname424=_AheadLib_Noname424,@424,NONAME")
#pragma comment(linker, "/EXPORT:Noname425=_AheadLib_Noname425,@425,NONAME")
#pragma comment(linker, "/EXPORT:Noname426=_AheadLib_Noname426,@426,NONAME")
#pragma comment(linker, "/EXPORT:Noname427=_AheadLib_Noname427,@427,NONAME")
#pragma comment(linker, "/EXPORT:Noname428=_AheadLib_Noname428,@428,NONAME")
#pragma comment(linker, "/EXPORT:Noname429=_AheadLib_Noname429,@429,NONAME")
#pragma comment(linker, "/EXPORT:Noname430=_AheadLib_Noname430,@430,NONAME")
#pragma comment(linker, "/EXPORT:Noname431=_AheadLib_Noname431,@431,NONAME")
#pragma comment(linker, "/EXPORT:Noname432=_AheadLib_Noname432,@432,NONAME")
#pragma comment(linker, "/EXPORT:Noname433=_AheadLib_Noname433,@433,NONAME")
#pragma comment(linker, "/EXPORT:Noname434=_AheadLib_Noname434,@434,NONAME")
#pragma comment(linker, "/EXPORT:Noname435=_AheadLib_Noname435,@435,NONAME")
#pragma comment(linker, "/EXPORT:Noname436=_AheadLib_Noname436,@436,NONAME")
#pragma comment(linker, "/EXPORT:Noname437=_AheadLib_Noname437,@437,NONAME")
#pragma comment(linker, "/EXPORT:Noname438=_AheadLib_Noname438,@438,NONAME")
#pragma comment(linker, "/EXPORT:Noname439=_AheadLib_Noname439,@439,NONAME")
#pragma comment(linker, "/EXPORT:Noname440=_AheadLib_Noname440,@440,NONAME")
#pragma comment(linker, "/EXPORT:Noname441=_AheadLib_Noname441,@441,NONAME")
#pragma comment(linker, "/EXPORT:Noname442=_AheadLib_Noname442,@442,NONAME")
#pragma comment(linker, "/EXPORT:Noname443=_AheadLib_Noname443,@443,NONAME")
#pragma comment(linker, "/EXPORT:Noname444=_AheadLib_Noname444,@444,NONAME")
#pragma comment(linker, "/EXPORT:Noname445=_AheadLib_Noname445,@445,NONAME")
#pragma comment(linker, "/EXPORT:Noname446=_AheadLib_Noname446,@446,NONAME")
#pragma comment(linker, "/EXPORT:Noname447=_AheadLib_Noname447,@447,NONAME")
#pragma comment(linker, "/EXPORT:Noname448=_AheadLib_Noname448,@448,NONAME")
#pragma comment(linker, "/EXPORT:Noname449=_AheadLib_Noname449,@449,NONAME")
#pragma comment(linker, "/EXPORT:Noname450=_AheadLib_Noname450,@450,NONAME")
#pragma comment(linker, "/EXPORT:Noname451=_AheadLib_Noname451,@451,NONAME")
#pragma comment(linker, "/EXPORT:Noname452=_AheadLib_Noname452,@452,NONAME")
#pragma comment(linker, "/EXPORT:Noname453=_AheadLib_Noname453,@453,NONAME")
#pragma comment(linker, "/EXPORT:Noname454=_AheadLib_Noname454,@454,NONAME")
#pragma comment(linker, "/EXPORT:Noname455=_AheadLib_Noname455,@455,NONAME")
#pragma comment(linker, "/EXPORT:Noname456=_AheadLib_Noname456,@456,NONAME")
#pragma comment(linker, "/EXPORT:Noname457=_AheadLib_Noname457,@457,NONAME")
#pragma comment(linker, "/EXPORT:Noname458=_AheadLib_Noname458,@458,NONAME")
#pragma comment(linker, "/EXPORT:Noname459=_AheadLib_Noname459,@459,NONAME")
#pragma comment(linker, "/EXPORT:Noname460=_AheadLib_Noname460,@460,NONAME")
#pragma comment(linker, "/EXPORT:Noname461=_AheadLib_Noname461,@461,NONAME")
#pragma comment(linker, "/EXPORT:Noname462=_AheadLib_Noname462,@462,NONAME")
#pragma comment(linker, "/EXPORT:Noname463=_AheadLib_Noname463,@463,NONAME")
#pragma comment(linker, "/EXPORT:Noname464=_AheadLib_Noname464,@464,NONAME")
#pragma comment(linker, "/EXPORT:Noname465=_AheadLib_Noname465,@465,NONAME")
#pragma comment(linker, "/EXPORT:Noname466=_AheadLib_Noname466,@466,NONAME")
#pragma comment(linker, "/EXPORT:Noname467=_AheadLib_Noname467,@467,NONAME")
#pragma comment(linker, "/EXPORT:Noname468=_AheadLib_Noname468,@468,NONAME")
#pragma comment(linker, "/EXPORT:Noname469=_AheadLib_Noname469,@469,NONAME")
#pragma comment(linker, "/EXPORT:Noname470=_AheadLib_Noname470,@470,NONAME")
#pragma comment(linker, "/EXPORT:Noname471=_AheadLib_Noname471,@471,NONAME")
#pragma comment(linker, "/EXPORT:Noname472=_AheadLib_Noname472,@472,NONAME")
#pragma comment(linker, "/EXPORT:Noname473=_AheadLib_Noname473,@473,NONAME")
#pragma comment(linker, "/EXPORT:Noname474=_AheadLib_Noname474,@474,NONAME")
#pragma comment(linker, "/EXPORT:Noname475=_AheadLib_Noname475,@475,NONAME")
#pragma comment(linker, "/EXPORT:Noname476=_AheadLib_Noname476,@476,NONAME")
#pragma comment(linker, "/EXPORT:Noname477=_AheadLib_Noname477,@477,NONAME")
#pragma comment(linker, "/EXPORT:Noname478=_AheadLib_Noname478,@478,NONAME")
#pragma comment(linker, "/EXPORT:Noname479=_AheadLib_Noname479,@479,NONAME")
#pragma comment(linker, "/EXPORT:Noname480=_AheadLib_Noname480,@480,NONAME")
#pragma comment(linker, "/EXPORT:Noname481=_AheadLib_Noname481,@481,NONAME")
#pragma comment(linker, "/EXPORT:Noname482=_AheadLib_Noname482,@482,NONAME")
#pragma comment(linker, "/EXPORT:Noname483=_AheadLib_Noname483,@483,NONAME")
#pragma comment(linker, "/EXPORT:Noname484=_AheadLib_Noname484,@484,NONAME")
#pragma comment(linker, "/EXPORT:Noname485=_AheadLib_Noname485,@485,NONAME")
#pragma comment(linker, "/EXPORT:Noname486=_AheadLib_Noname486,@486,NONAME")
#pragma comment(linker, "/EXPORT:Noname487=_AheadLib_Noname487,@487,NONAME")
#pragma comment(linker, "/EXPORT:Noname488=_AheadLib_Noname488,@488,NONAME")
#pragma comment(linker, "/EXPORT:Noname489=_AheadLib_Noname489,@489,NONAME")
#pragma comment(linker, "/EXPORT:Noname490=_AheadLib_Noname490,@490,NONAME")
#pragma comment(linker, "/EXPORT:Noname491=_AheadLib_Noname491,@491,NONAME")
#pragma comment(linker, "/EXPORT:Noname492=_AheadLib_Noname492,@492,NONAME")
#pragma comment(linker, "/EXPORT:Noname493=_AheadLib_Noname493,@493,NONAME")
#pragma comment(linker, "/EXPORT:Noname494=_AheadLib_Noname494,@494,NONAME")
#pragma comment(linker, "/EXPORT:Noname495=_AheadLib_Noname495,@495,NONAME")
#pragma comment(linker, "/EXPORT:Noname496=_AheadLib_Noname496,@496,NONAME")
#pragma comment(linker, "/EXPORT:Noname497=_AheadLib_Noname497,@497,NONAME")
#pragma comment(linker, "/EXPORT:Noname498=_AheadLib_Noname498,@498,NONAME")
#pragma comment(linker, "/EXPORT:Noname499=_AheadLib_Noname499,@499,NONAME")
#pragma comment(linker, "/EXPORT:WEP=_AheadLib_WEP,@500")
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 宏定义
#define EXTERNC extern "C"
#define NAKED __declspec(naked)
#define EXPORT __declspec(dllexport)

#define ALCPP EXPORT NAKED
#define ALSTD EXTERNC EXPORT NAKED void __stdcall
#define ALCFAST EXTERNC EXPORT NAKED void __fastcall
#define ALCDECL EXTERNC NAKED void __cdecl
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// AheadLib 命名空间
namespace AheadLib
{
	HMODULE m_hModule = NULL;	// 原始模块句柄
	DWORD m_dwReturn[500] = {0};	// 原始函数返回地址


	// 加载原始模块
	inline BOOL WINAPI Load()
	{
		TCHAR tzPath[MAX_PATH];
		TCHAR tzTemp[MAX_PATH * 2];

		GetSystemDirectory(tzPath, MAX_PATH);
		lstrcat(tzPath, TEXT("\\ws2_32"));
		m_hModule = LoadLibrary(tzPath);
		if (m_hModule == NULL)
		{
			wsprintf(tzTemp, TEXT("无法加载 %s，程序无法正常运行。"), tzPath);
			MessageBox(NULL, tzTemp, TEXT("AheadLib"), MB_ICONSTOP);
		}

		return (m_hModule != NULL);	
	}
		
	// 释放原始模块
	inline VOID WINAPI Free()
	{
		if (m_hModule)
		{
			FreeLibrary(m_hModule);
		}
	}

	// 获取原始函数地址
	FARPROC WINAPI GetAddress(PCSTR pszProcName)
	{
		FARPROC fpAddress;
		CHAR szProcName[16];
		TCHAR tzTemp[MAX_PATH];

		fpAddress = GetProcAddress(m_hModule, pszProcName);
		if (fpAddress == NULL)
		{
			if (HIWORD(pszProcName) == 0)
			{
				wsprintf(szProcName, "%d", pszProcName);
				pszProcName = szProcName;
			}

			wsprintf(tzTemp, TEXT("无法找到函数 %hs，程序无法正常运行。"), pszProcName);
			MessageBox(NULL, tzTemp, TEXT("AheadLib"), MB_ICONSTOP);
			ExitProcess(-2);
		}

		return fpAddress;
	}
}
using namespace AheadLib;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 入口函数
BOOL WINAPI DllMain(HMODULE hModule, DWORD dwReason, PVOID pvReserved)
{
	if (dwReason == DLL_PROCESS_ATTACH)
	{
		DisableThreadLibraryCalls(hModule);

		return Load();
	}
	else if (dwReason == DLL_PROCESS_DETACH)
	{
		Free();
	}

	return TRUE;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void msg(char * message)
{
	char txt[128] = "";
	DWORD dwBytesWritten;
	strcpy(txt, message);
	strcat(txt, "\r\n");
	HANDLE hFile = CreateFile(TEXT("ws2_32_hijack.log"), FILE_APPEND_DATA, FILE_SHARE_WRITE, NULL, OPEN_ALWAYS, FILE_ATTRIBUTE_NORMAL, NULL);
	WriteFile(hFile, txt, strlen(txt), &dwBytesWritten, NULL);
	CloseHandle(hFile);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_accept(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[0 * TYPE long];

	// 调用原始函数
	GetAddress("accept")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[0 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_bind(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[1 * TYPE long];

	// 调用原始函数
	GetAddress("bind")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[1 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_closesocket(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[2 * TYPE long];

	// 调用原始函数
	GetAddress("closesocket")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[2 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_connect(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[3 * TYPE long];

	// 调用原始函数
	GetAddress("connect")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[3 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_getpeername(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[4 * TYPE long];

	// 调用原始函数
	GetAddress("getpeername")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[4 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_getsockname(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[5 * TYPE long];

	// 调用原始函数
	GetAddress("getsockname")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[5 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_getsockopt(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[6 * TYPE long];

	// 调用原始函数
	GetAddress("getsockopt")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[6 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_htonl(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[7 * TYPE long];

	// 调用原始函数
	GetAddress("htonl")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[7 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_htons(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[8 * TYPE long];

	// 调用原始函数
	GetAddress("htons")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[8 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ioctlsocket(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[9 * TYPE long];

	// 调用原始函数
	GetAddress("ioctlsocket")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[9 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_inet_addr(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[10 * TYPE long];

	// 调用原始函数
	GetAddress("inet_addr")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[10 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_inet_ntoa(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[11 * TYPE long];

	// 调用原始函数
	GetAddress("inet_ntoa")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[11 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_listen(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[12 * TYPE long];

	// 调用原始函数
	GetAddress("listen")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[12 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ntohl(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[13 * TYPE long];

	// 调用原始函数
	GetAddress("ntohl")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[13 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ntohs(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[14 * TYPE long];

	// 调用原始函数
	GetAddress("ntohs")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[14 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_recv(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[15 * TYPE long];

	// 调用原始函数
	GetAddress("recv")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[15 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_recvfrom(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[16 * TYPE long];

	// 调用原始函数
	GetAddress("recvfrom")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[16 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_select(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[17 * TYPE long];

	// 调用原始函数
	GetAddress("select")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[17 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_send(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[18 * TYPE long];

	// 调用原始函数
	GetAddress("send")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[18 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_sendto(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[19 * TYPE long];

	// 调用原始函数
	GetAddress("sendto")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[19 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_setsockopt(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[20 * TYPE long];

	// 调用原始函数
	GetAddress("setsockopt")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[20 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_shutdown(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[21 * TYPE long];

	// 调用原始函数
	GetAddress("shutdown")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[21 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_socket(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[22 * TYPE long];

	// 调用原始函数
	GetAddress("socket")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[22 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetAddrInfoW(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[23 * TYPE long];

	// 调用原始函数
	GetAddress("GetAddrInfoW")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[23 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetNameInfoW(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[24 * TYPE long];

	// 调用原始函数
	GetAddress("GetNameInfoW")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[24 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSApSetPostRoutine(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[25 * TYPE long];

	// 调用原始函数
	GetAddress("WSApSetPostRoutine")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[25 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_FreeAddrInfoW(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[26 * TYPE long];

	// 调用原始函数
	GetAddress("FreeAddrInfoW")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[26 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WPUCompleteOverlappedRequest(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[27 * TYPE long];

	// 调用原始函数
	GetAddress("WPUCompleteOverlappedRequest")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[27 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAAccept(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[28 * TYPE long];

	// 调用原始函数
	GetAddress("WSAAccept")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[28 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAAddressToStringA(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[29 * TYPE long];

	// 调用原始函数
	GetAddress("WSAAddressToStringA")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[29 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAAddressToStringW(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[30 * TYPE long];

	// 调用原始函数
	GetAddress("WSAAddressToStringW")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[30 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSACloseEvent(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[31 * TYPE long];

	// 调用原始函数
	GetAddress("WSACloseEvent")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[31 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAConnect(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[32 * TYPE long];

	// 调用原始函数
	GetAddress("WSAConnect")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[32 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSACreateEvent(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[33 * TYPE long];

	// 调用原始函数
	GetAddress("WSACreateEvent")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[33 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSADuplicateSocketA(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[34 * TYPE long];

	// 调用原始函数
	GetAddress("WSADuplicateSocketA")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[34 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSADuplicateSocketW(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[35 * TYPE long];

	// 调用原始函数
	GetAddress("WSADuplicateSocketW")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[35 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAEnumNameSpaceProvidersA(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[36 * TYPE long];

	// 调用原始函数
	GetAddress("WSAEnumNameSpaceProvidersA")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[36 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAEnumNameSpaceProvidersW(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[37 * TYPE long];

	// 调用原始函数
	GetAddress("WSAEnumNameSpaceProvidersW")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[37 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAEnumNetworkEvents(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[38 * TYPE long];

	// 调用原始函数
	GetAddress("WSAEnumNetworkEvents")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[38 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAEnumProtocolsA(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[39 * TYPE long];

	// 调用原始函数
	GetAddress("WSAEnumProtocolsA")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[39 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAEnumProtocolsW(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[40 * TYPE long];

	// 调用原始函数
	GetAddress("WSAEnumProtocolsW")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[40 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAEventSelect(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[41 * TYPE long];

	// 调用原始函数
	GetAddress("WSAEventSelect")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[41 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAGetOverlappedResult(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[42 * TYPE long];

	// 调用原始函数
	GetAddress("WSAGetOverlappedResult")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[42 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAGetQOSByName(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[43 * TYPE long];

	// 调用原始函数
	GetAddress("WSAGetQOSByName")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[43 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAGetServiceClassInfoA(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[44 * TYPE long];

	// 调用原始函数
	GetAddress("WSAGetServiceClassInfoA")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[44 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAGetServiceClassInfoW(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[45 * TYPE long];

	// 调用原始函数
	GetAddress("WSAGetServiceClassInfoW")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[45 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAGetServiceClassNameByClassIdA(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[46 * TYPE long];

	// 调用原始函数
	GetAddress("WSAGetServiceClassNameByClassIdA")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[46 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAGetServiceClassNameByClassIdW(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[47 * TYPE long];

	// 调用原始函数
	GetAddress("WSAGetServiceClassNameByClassIdW")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[47 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAHtonl(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[48 * TYPE long];

	// 调用原始函数
	GetAddress("WSAHtonl")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[48 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAHtons(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[49 * TYPE long];

	// 调用原始函数
	GetAddress("WSAHtons")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[49 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_gethostbyaddr(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[50 * TYPE long];

	// 调用原始函数
	GetAddress("gethostbyaddr")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[50 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数

/*
ALCDECL AheadLib_gethostbyname(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[51 * TYPE long];

	// 调用原始函数
	GetAddress("gethostbyname")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[51 * TYPE long];
}
*/

EXTERNC EXPORT struct hostent * WINAPI AheadLib_gethostbyname(_In_ const char * host_name)
{
	msg("gethostbyname");
	typedef struct hostent * (WINAPI * MYPROC)(_In_ const char *);
	typedef char * (WINAPI * INETNTOA)(struct in_addr);
	typedef struct in_addr (WINAPI * INETADDR)(char *);
	MYPROC realGetHostByName = (MYPROC)GetAddress("gethostbyname");
	INETNTOA realInetntoa = (INETNTOA)GetAddress("inet_ntoa");
	INETADDR realInetaddr = (INETADDR)GetAddress("inet_addr");

	struct hostent * hptr = realGetHostByName(host_name);
	struct in_addr addr;
	char **pptr;
	pptr = hptr->h_addr_list;
	
	for(;*pptr!=NULL;pptr++)
	{
		//msg("found one address");
		addr.s_addr = *(u_long*)*pptr;
		msg(realInetntoa(addr));
	}

	HANDLE hFile = CreateFile(TEXT("ip_hijack.txt"), GENERIC_READ, FILE_SHARE_READ, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);
	if(hFile != INVALID_HANDLE_VALUE){
		msg("ip_hijack.txt opened");
		char ReadBuffer[64] = {0};
		DWORD dwBytesRead;
		if(FALSE == ReadFile(hFile, ReadBuffer, 63, &dwBytesRead, NULL)){
			msg("readfile error");
		}else{
			char txt[128] = "";
			strcpy(txt, "ip_hijack: ");
			strcat(txt, ReadBuffer);
			msg(txt);
			struct in_addr hijack_addr = realInetaddr(ReadBuffer);
			pptr = hptr->h_addr_list;
			*(u_long*)*pptr = hijack_addr.s_addr;
			*(pptr+1) = 0;
			msg("hijacked");
		}
		CloseHandle(hFile);
	}else{
		msg("cannot open ip_hijack.txt");
	}
	
	msg("return");
	return hptr;
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_getprotobyname(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[52 * TYPE long];

	// 调用原始函数
	GetAddress("getprotobyname")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[52 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_getprotobynumber(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[53 * TYPE long];

	// 调用原始函数
	GetAddress("getprotobynumber")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[53 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_getservbyname(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[54 * TYPE long];

	// 调用原始函数
	GetAddress("getservbyname")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[54 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_getservbyport(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[55 * TYPE long];

	// 调用原始函数
	GetAddress("getservbyport")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[55 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_gethostname(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[56 * TYPE long];

	// 调用原始函数
	GetAddress("gethostname")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[56 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAInstallServiceClassA(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[57 * TYPE long];

	// 调用原始函数
	GetAddress("WSAInstallServiceClassA")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[57 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAInstallServiceClassW(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[58 * TYPE long];

	// 调用原始函数
	GetAddress("WSAInstallServiceClassW")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[58 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAIoctl(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[59 * TYPE long];

	// 调用原始函数
	GetAddress("WSAIoctl")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[59 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAJoinLeaf(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[60 * TYPE long];

	// 调用原始函数
	GetAddress("WSAJoinLeaf")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[60 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSALookupServiceBeginA(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[61 * TYPE long];

	// 调用原始函数
	GetAddress("WSALookupServiceBeginA")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[61 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSALookupServiceBeginW(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[62 * TYPE long];

	// 调用原始函数
	GetAddress("WSALookupServiceBeginW")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[62 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSALookupServiceEnd(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[63 * TYPE long];

	// 调用原始函数
	GetAddress("WSALookupServiceEnd")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[63 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSALookupServiceNextA(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[64 * TYPE long];

	// 调用原始函数
	GetAddress("WSALookupServiceNextA")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[64 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSALookupServiceNextW(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[65 * TYPE long];

	// 调用原始函数
	GetAddress("WSALookupServiceNextW")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[65 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSANSPIoctl(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[66 * TYPE long];

	// 调用原始函数
	GetAddress("WSANSPIoctl")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[66 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSANtohl(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[67 * TYPE long];

	// 调用原始函数
	GetAddress("WSANtohl")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[67 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSANtohs(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[68 * TYPE long];

	// 调用原始函数
	GetAddress("WSANtohs")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[68 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAProviderConfigChange(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[69 * TYPE long];

	// 调用原始函数
	GetAddress("WSAProviderConfigChange")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[69 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSARecv(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[70 * TYPE long];

	// 调用原始函数
	GetAddress("WSARecv")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[70 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSARecvDisconnect(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[71 * TYPE long];

	// 调用原始函数
	GetAddress("WSARecvDisconnect")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[71 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSARecvFrom(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[72 * TYPE long];

	// 调用原始函数
	GetAddress("WSARecvFrom")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[72 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSARemoveServiceClass(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[73 * TYPE long];

	// 调用原始函数
	GetAddress("WSARemoveServiceClass")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[73 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAResetEvent(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[74 * TYPE long];

	// 调用原始函数
	GetAddress("WSAResetEvent")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[74 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSASend(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[75 * TYPE long];

	// 调用原始函数
	GetAddress("WSASend")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[75 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSASendDisconnect(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[76 * TYPE long];

	// 调用原始函数
	GetAddress("WSASendDisconnect")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[76 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSASendTo(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[77 * TYPE long];

	// 调用原始函数
	GetAddress("WSASendTo")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[77 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSASetEvent(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[78 * TYPE long];

	// 调用原始函数
	GetAddress("WSASetEvent")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[78 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSASetServiceA(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[79 * TYPE long];

	// 调用原始函数
	GetAddress("WSASetServiceA")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[79 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSASetServiceW(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[80 * TYPE long];

	// 调用原始函数
	GetAddress("WSASetServiceW")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[80 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSASocketA(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[81 * TYPE long];

	// 调用原始函数
	GetAddress("WSASocketA")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[81 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSASocketW(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[82 * TYPE long];

	// 调用原始函数
	GetAddress("WSASocketW")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[82 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAStringToAddressA(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[83 * TYPE long];

	// 调用原始函数
	GetAddress("WSAStringToAddressA")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[83 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAStringToAddressW(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[84 * TYPE long];

	// 调用原始函数
	GetAddress("WSAStringToAddressW")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[84 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAWaitForMultipleEvents(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[85 * TYPE long];

	// 调用原始函数
	GetAddress("WSAWaitForMultipleEvents")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[85 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSCDeinstallProvider(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[86 * TYPE long];

	// 调用原始函数
	GetAddress("WSCDeinstallProvider")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[86 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSCEnableNSProvider(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[87 * TYPE long];

	// 调用原始函数
	GetAddress("WSCEnableNSProvider")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[87 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSCEnumProtocols(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[88 * TYPE long];

	// 调用原始函数
	GetAddress("WSCEnumProtocols")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[88 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSCGetProviderPath(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[89 * TYPE long];

	// 调用原始函数
	GetAddress("WSCGetProviderPath")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[89 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSCInstallNameSpace(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[90 * TYPE long];

	// 调用原始函数
	GetAddress("WSCInstallNameSpace")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[90 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSCInstallProvider(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[91 * TYPE long];

	// 调用原始函数
	GetAddress("WSCInstallProvider")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[91 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSCUnInstallNameSpace(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[92 * TYPE long];

	// 调用原始函数
	GetAddress("WSCUnInstallNameSpace")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[92 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSCUpdateProvider(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[93 * TYPE long];

	// 调用原始函数
	GetAddress("WSCUpdateProvider")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[93 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSCWriteNameSpaceOrder(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[94 * TYPE long];

	// 调用原始函数
	GetAddress("WSCWriteNameSpaceOrder")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[94 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSCWriteProviderOrder(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[95 * TYPE long];

	// 调用原始函数
	GetAddress("WSCWriteProviderOrder")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[95 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_freeaddrinfo(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[96 * TYPE long];

	// 调用原始函数
	GetAddress("freeaddrinfo")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[96 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_getaddrinfo(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[97 * TYPE long];

	// 调用原始函数
	GetAddress("getaddrinfo")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[97 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_getnameinfo(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[98 * TYPE long];

	// 调用原始函数
	GetAddress("getnameinfo")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[98 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname100(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[99 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(100))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[99 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAAsyncSelect(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[100 * TYPE long];

	// 调用原始函数
	GetAddress("WSAAsyncSelect")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[100 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAAsyncGetHostByAddr(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[101 * TYPE long];

	// 调用原始函数
	GetAddress("WSAAsyncGetHostByAddr")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[101 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAAsyncGetHostByName(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[102 * TYPE long];

	// 调用原始函数
	GetAddress("WSAAsyncGetHostByName")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[102 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAAsyncGetProtoByNumber(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[103 * TYPE long];

	// 调用原始函数
	GetAddress("WSAAsyncGetProtoByNumber")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[103 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAAsyncGetProtoByName(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[104 * TYPE long];

	// 调用原始函数
	GetAddress("WSAAsyncGetProtoByName")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[104 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAAsyncGetServByPort(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[105 * TYPE long];

	// 调用原始函数
	GetAddress("WSAAsyncGetServByPort")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[105 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAAsyncGetServByName(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[106 * TYPE long];

	// 调用原始函数
	GetAddress("WSAAsyncGetServByName")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[106 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSACancelAsyncRequest(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[107 * TYPE long];

	// 调用原始函数
	GetAddress("WSACancelAsyncRequest")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[107 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSASetBlockingHook(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[108 * TYPE long];

	// 调用原始函数
	GetAddress("WSASetBlockingHook")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[108 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAUnhookBlockingHook(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[109 * TYPE long];

	// 调用原始函数
	GetAddress("WSAUnhookBlockingHook")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[109 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAGetLastError(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[110 * TYPE long];

	// 调用原始函数
	GetAddress("WSAGetLastError")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[110 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSASetLastError(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[111 * TYPE long];

	// 调用原始函数
	GetAddress("WSASetLastError")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[111 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSACancelBlockingCall(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[112 * TYPE long];

	// 调用原始函数
	GetAddress("WSACancelBlockingCall")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[112 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAIsBlocking(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[113 * TYPE long];

	// 调用原始函数
	GetAddress("WSAIsBlocking")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[113 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSAStartup(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[114 * TYPE long];

	// 调用原始函数
	GetAddress("WSAStartup")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[114 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WSACleanup(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[115 * TYPE long];

	// 调用原始函数
	GetAddress("WSACleanup")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[115 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname117(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[116 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(117))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[116 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname118(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[117 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(118))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[117 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname119(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[118 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(119))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[118 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname120(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[119 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(120))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[119 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname121(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[120 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(121))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[120 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname122(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[121 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(122))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[121 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname123(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[122 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(123))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[122 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname124(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[123 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(124))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[123 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname125(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[124 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(125))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[124 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname126(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[125 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(126))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[125 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname127(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[126 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(127))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[126 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname128(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[127 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(128))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[127 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname129(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[128 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(129))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[128 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname130(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[129 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(130))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[129 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname131(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[130 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(131))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[130 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname132(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[131 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(132))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[131 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname133(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[132 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(133))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[132 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname134(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[133 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(134))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[133 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname135(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[134 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(135))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[134 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname136(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[135 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(136))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[135 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname137(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[136 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(137))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[136 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname138(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[137 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(138))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[137 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname139(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[138 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(139))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[138 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname140(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[139 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(140))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[139 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname141(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[140 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(141))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[140 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname142(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[141 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(142))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[141 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname143(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[142 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(143))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[142 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname144(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[143 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(144))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[143 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname145(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[144 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(145))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[144 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname146(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[145 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(146))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[145 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname147(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[146 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(147))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[146 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname148(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[147 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(148))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[147 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname149(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[148 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(149))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[148 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname150(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[149 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(150))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[149 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib___WSAFDIsSet(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[150 * TYPE long];

	// 调用原始函数
	GetAddress("__WSAFDIsSet")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[150 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname152(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[151 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(152))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[151 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname153(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[152 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(153))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[152 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname154(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[153 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(154))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[153 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname155(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[154 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(155))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[154 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname156(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[155 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(156))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[155 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname157(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[156 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(157))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[156 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname158(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[157 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(158))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[157 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname159(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[158 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(159))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[158 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname160(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[159 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(160))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[159 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname161(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[160 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(161))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[160 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname162(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[161 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(162))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[161 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname163(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[162 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(163))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[162 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname164(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[163 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(164))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[163 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname165(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[164 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(165))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[164 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname166(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[165 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(166))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[165 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname167(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[166 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(167))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[166 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname168(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[167 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(168))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[167 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname169(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[168 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(169))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[168 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname170(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[169 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(170))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[169 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname171(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[170 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(171))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[170 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname172(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[171 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(172))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[171 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname173(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[172 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(173))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[172 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname174(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[173 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(174))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[173 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname175(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[174 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(175))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[174 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname176(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[175 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(176))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[175 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname177(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[176 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(177))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[176 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname178(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[177 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(178))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[177 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname179(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[178 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(179))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[178 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname180(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[179 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(180))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[179 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname181(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[180 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(181))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[180 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname182(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[181 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(182))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[181 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname183(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[182 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(183))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[182 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname184(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[183 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(184))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[183 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname185(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[184 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(185))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[184 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname186(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[185 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(186))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[185 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname187(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[186 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(187))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[186 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname188(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[187 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(188))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[187 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname189(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[188 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(189))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[188 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname190(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[189 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(190))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[189 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname191(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[190 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(191))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[190 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname192(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[191 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(192))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[191 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname193(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[192 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(193))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[192 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname194(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[193 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(194))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[193 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname195(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[194 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(195))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[194 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname196(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[195 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(196))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[195 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname197(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[196 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(197))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[196 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname198(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[197 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(198))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[197 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname199(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[198 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(199))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[198 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname200(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[199 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(200))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[199 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname201(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[200 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(201))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[200 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname202(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[201 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(202))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[201 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname203(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[202 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(203))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[202 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname204(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[203 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(204))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[203 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname205(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[204 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(205))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[204 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname206(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[205 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(206))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[205 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname207(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[206 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(207))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[206 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname208(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[207 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(208))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[207 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname209(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[208 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(209))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[208 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname210(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[209 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(210))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[209 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname211(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[210 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(211))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[210 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname212(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[211 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(212))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[211 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname213(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[212 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(213))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[212 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname214(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[213 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(214))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[213 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname215(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[214 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(215))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[214 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname216(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[215 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(216))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[215 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname217(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[216 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(217))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[216 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname218(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[217 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(218))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[217 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname219(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[218 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(219))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[218 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname220(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[219 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(220))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[219 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname221(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[220 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(221))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[220 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname222(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[221 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(222))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[221 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname223(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[222 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(223))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[222 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname224(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[223 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(224))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[223 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname225(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[224 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(225))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[224 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname226(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[225 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(226))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[225 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname227(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[226 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(227))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[226 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname228(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[227 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(228))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[227 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname229(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[228 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(229))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[228 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname230(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[229 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(230))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[229 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname231(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[230 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(231))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[230 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname232(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[231 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(232))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[231 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname233(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[232 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(233))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[232 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname234(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[233 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(234))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[233 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname235(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[234 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(235))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[234 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname236(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[235 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(236))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[235 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname237(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[236 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(237))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[236 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname238(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[237 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(238))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[237 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname239(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[238 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(239))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[238 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname240(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[239 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(240))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[239 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname241(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[240 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(241))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[240 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname242(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[241 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(242))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[241 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname243(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[242 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(243))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[242 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname244(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[243 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(244))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[243 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname245(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[244 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(245))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[244 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname246(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[245 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(246))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[245 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname247(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[246 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(247))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[246 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname248(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[247 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(248))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[247 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname249(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[248 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(249))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[248 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname250(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[249 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(250))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[249 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname251(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[250 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(251))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[250 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname252(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[251 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(252))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[251 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname253(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[252 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(253))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[252 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname254(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[253 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(254))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[253 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname255(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[254 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(255))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[254 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname256(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[255 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(256))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[255 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname257(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[256 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(257))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[256 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname258(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[257 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(258))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[257 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname259(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[258 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(259))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[258 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname260(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[259 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(260))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[259 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname261(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[260 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(261))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[260 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname262(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[261 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(262))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[261 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname263(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[262 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(263))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[262 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname264(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[263 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(264))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[263 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname265(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[264 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(265))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[264 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname266(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[265 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(266))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[265 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname267(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[266 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(267))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[266 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname268(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[267 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(268))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[267 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname269(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[268 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(269))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[268 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname270(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[269 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(270))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[269 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname271(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[270 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(271))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[270 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname272(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[271 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(272))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[271 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname273(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[272 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(273))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[272 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname274(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[273 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(274))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[273 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname275(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[274 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(275))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[274 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname276(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[275 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(276))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[275 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname277(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[276 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(277))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[276 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname278(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[277 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(278))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[277 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname279(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[278 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(279))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[278 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname280(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[279 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(280))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[279 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname281(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[280 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(281))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[280 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname282(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[281 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(282))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[281 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname283(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[282 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(283))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[282 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname284(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[283 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(284))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[283 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname285(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[284 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(285))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[284 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname286(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[285 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(286))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[285 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname287(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[286 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(287))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[286 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname288(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[287 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(288))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[287 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname289(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[288 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(289))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[288 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname290(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[289 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(290))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[289 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname291(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[290 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(291))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[290 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname292(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[291 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(292))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[291 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname293(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[292 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(293))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[292 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname294(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[293 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(294))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[293 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname295(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[294 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(295))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[294 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname296(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[295 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(296))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[295 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname297(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[296 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(297))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[296 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname298(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[297 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(298))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[297 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname299(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[298 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(299))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[298 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname300(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[299 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(300))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[299 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname301(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[300 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(301))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[300 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname302(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[301 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(302))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[301 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname303(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[302 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(303))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[302 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname304(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[303 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(304))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[303 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname305(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[304 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(305))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[304 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname306(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[305 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(306))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[305 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname307(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[306 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(307))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[306 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname308(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[307 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(308))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[307 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname309(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[308 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(309))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[308 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname310(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[309 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(310))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[309 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname311(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[310 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(311))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[310 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname312(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[311 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(312))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[311 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname313(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[312 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(313))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[312 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname314(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[313 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(314))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[313 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname315(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[314 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(315))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[314 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname316(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[315 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(316))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[315 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname317(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[316 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(317))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[316 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname318(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[317 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(318))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[317 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname319(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[318 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(319))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[318 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname320(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[319 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(320))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[319 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname321(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[320 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(321))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[320 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname322(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[321 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(322))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[321 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname323(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[322 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(323))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[322 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname324(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[323 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(324))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[323 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname325(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[324 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(325))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[324 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname326(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[325 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(326))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[325 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname327(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[326 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(327))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[326 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname328(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[327 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(328))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[327 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname329(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[328 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(329))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[328 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname330(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[329 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(330))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[329 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname331(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[330 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(331))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[330 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname332(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[331 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(332))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[331 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname333(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[332 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(333))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[332 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname334(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[333 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(334))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[333 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname335(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[334 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(335))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[334 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname336(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[335 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(336))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[335 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname337(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[336 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(337))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[336 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname338(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[337 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(338))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[337 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname339(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[338 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(339))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[338 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname340(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[339 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(340))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[339 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname341(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[340 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(341))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[340 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname342(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[341 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(342))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[341 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname343(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[342 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(343))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[342 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname344(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[343 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(344))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[343 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname345(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[344 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(345))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[344 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname346(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[345 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(346))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[345 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname347(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[346 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(347))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[346 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname348(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[347 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(348))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[347 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname349(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[348 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(349))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[348 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname350(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[349 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(350))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[349 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname351(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[350 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(351))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[350 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname352(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[351 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(352))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[351 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname353(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[352 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(353))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[352 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname354(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[353 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(354))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[353 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname355(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[354 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(355))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[354 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname356(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[355 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(356))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[355 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname357(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[356 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(357))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[356 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname358(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[357 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(358))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[357 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname359(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[358 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(359))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[358 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname360(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[359 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(360))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[359 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname361(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[360 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(361))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[360 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname362(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[361 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(362))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[361 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname363(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[362 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(363))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[362 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname364(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[363 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(364))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[363 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname365(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[364 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(365))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[364 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname366(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[365 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(366))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[365 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname367(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[366 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(367))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[366 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname368(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[367 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(368))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[367 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname369(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[368 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(369))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[368 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname370(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[369 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(370))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[369 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname371(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[370 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(371))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[370 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname372(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[371 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(372))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[371 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname373(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[372 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(373))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[372 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname374(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[373 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(374))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[373 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname375(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[374 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(375))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[374 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname376(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[375 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(376))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[375 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname377(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[376 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(377))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[376 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname378(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[377 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(378))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[377 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname379(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[378 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(379))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[378 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname380(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[379 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(380))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[379 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname381(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[380 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(381))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[380 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname382(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[381 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(382))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[381 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname383(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[382 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(383))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[382 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname384(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[383 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(384))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[383 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname385(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[384 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(385))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[384 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname386(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[385 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(386))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[385 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname387(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[386 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(387))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[386 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname388(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[387 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(388))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[387 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname389(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[388 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(389))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[388 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname390(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[389 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(390))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[389 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname391(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[390 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(391))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[390 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname392(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[391 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(392))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[391 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname393(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[392 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(393))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[392 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname394(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[393 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(394))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[393 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname395(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[394 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(395))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[394 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname396(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[395 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(396))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[395 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname397(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[396 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(397))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[396 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname398(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[397 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(398))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[397 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname399(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[398 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(399))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[398 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname400(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[399 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(400))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[399 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname401(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[400 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(401))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[400 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname402(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[401 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(402))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[401 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname403(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[402 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(403))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[402 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname404(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[403 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(404))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[403 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname405(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[404 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(405))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[404 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname406(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[405 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(406))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[405 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname407(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[406 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(407))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[406 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname408(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[407 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(408))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[407 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname409(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[408 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(409))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[408 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname410(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[409 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(410))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[409 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname411(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[410 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(411))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[410 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname412(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[411 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(412))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[411 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname413(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[412 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(413))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[412 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname414(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[413 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(414))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[413 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname415(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[414 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(415))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[414 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname416(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[415 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(416))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[415 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname417(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[416 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(417))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[416 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname418(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[417 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(418))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[417 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname419(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[418 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(419))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[418 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname420(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[419 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(420))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[419 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname421(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[420 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(421))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[420 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname422(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[421 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(422))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[421 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname423(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[422 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(423))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[422 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname424(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[423 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(424))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[423 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname425(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[424 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(425))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[424 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname426(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[425 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(426))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[425 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname427(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[426 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(427))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[426 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname428(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[427 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(428))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[427 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname429(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[428 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(429))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[428 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname430(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[429 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(430))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[429 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname431(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[430 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(431))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[430 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname432(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[431 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(432))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[431 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname433(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[432 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(433))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[432 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname434(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[433 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(434))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[433 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname435(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[434 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(435))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[434 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname436(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[435 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(436))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[435 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname437(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[436 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(437))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[436 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname438(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[437 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(438))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[437 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname439(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[438 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(439))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[438 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname440(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[439 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(440))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[439 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname441(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[440 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(441))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[440 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname442(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[441 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(442))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[441 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname443(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[442 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(443))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[442 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname444(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[443 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(444))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[443 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname445(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[444 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(445))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[444 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname446(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[445 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(446))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[445 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname447(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[446 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(447))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[446 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname448(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[447 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(448))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[447 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname449(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[448 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(449))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[448 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname450(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[449 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(450))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[449 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname451(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[450 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(451))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[450 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname452(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[451 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(452))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[451 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname453(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[452 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(453))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[452 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname454(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[453 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(454))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[453 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname455(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[454 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(455))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[454 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname456(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[455 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(456))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[455 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname457(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[456 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(457))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[456 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname458(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[457 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(458))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[457 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname459(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[458 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(459))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[458 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname460(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[459 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(460))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[459 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname461(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[460 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(461))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[460 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname462(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[461 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(462))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[461 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname463(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[462 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(463))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[462 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname464(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[463 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(464))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[463 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname465(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[464 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(465))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[464 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname466(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[465 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(466))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[465 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname467(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[466 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(467))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[466 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname468(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[467 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(468))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[467 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname469(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[468 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(469))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[468 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname470(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[469 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(470))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[469 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname471(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[470 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(471))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[470 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname472(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[471 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(472))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[471 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname473(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[472 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(473))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[472 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname474(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[473 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(474))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[473 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname475(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[474 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(475))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[474 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname476(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[475 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(476))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[475 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname477(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[476 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(477))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[476 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname478(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[477 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(478))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[477 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname479(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[478 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(479))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[478 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname480(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[479 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(480))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[479 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname481(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[480 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(481))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[480 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname482(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[481 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(482))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[481 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname483(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[482 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(483))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[482 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname484(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[483 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(484))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[483 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname485(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[484 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(485))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[484 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname486(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[485 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(486))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[485 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname487(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[486 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(487))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[486 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname488(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[487 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(488))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[487 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname489(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[488 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(489))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[488 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname490(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[489 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(490))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[489 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname491(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[490 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(491))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[490 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname492(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[491 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(492))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[491 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname493(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[492 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(493))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[492 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname494(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[493 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(494))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[493 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname495(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[494 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(495))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[494 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname496(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[495 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(496))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[495 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname497(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[496 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(497))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[496 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname498(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[497 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(498))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[497 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname499(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[498 * TYPE long];

	// 调用原始函数
	GetAddress(MAKEINTRESOURCE(499))();

	// 转跳到返回地址
	__asm JMP m_dwReturn[498 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_WEP(void)
{
	// 保存返回地址
	__asm POP m_dwReturn[499 * TYPE long];

	// 调用原始函数
	GetAddress("WEP")();

	// 转跳到返回地址
	__asm JMP m_dwReturn[499 * TYPE long];
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
